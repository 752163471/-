<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://code.alibabatech.com/schema/dubbo
       http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

    <!--开组件扫描，不然AutoWired失效-->
    <!--<context:component-scan base-package="com.itheima.health"/>-->

    <!--1.注册一个任务-->
    <bean id="clearImgJobs" class="com.itheima.health.jobs.ClearImgJobs"/>
    <!--注册一个清理预约设置历史数据的任务-->
    <bean id="clearHistoryJobs" class="com.itheima.health.jobs.ClearHistoryJobs"/>
    <!--2.任务描述-->
    <bean id="jobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="clearImgJobs"/>
        <property name="targetMethod" value="ClearImg"/>
    </bean>
    <!--任务描述-->
    <bean id="jobDetail2" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="clearHistoryJobs"/>
        <property name="targetMethod" value="clearHistoryData"/>
    </bean>
    <!--3.注册一个触发器-->
    <bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <!--注册任务-->
        <property name="jobDetail" ref="jobDetail"/>
        <!--指定触发的事件，基于Cron表达式(0 0 2 * * ?)表示凌晨2点执行-->
        <property name="cronExpression" value="0 55 20 * * ?"/>

    </bean>

    <bean id="cronTrigger2" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="jobDetail2"/>
        <!--每月最后一天凌晨2点执行一次清理任务-->
        <!-- <property name="cronExpression" value="0 0 2 L * ?"/>-->
        <property name="cronExpression" value="0 37 10 * * ?"/>
    </bean>
    <!--调度工厂-->
    <bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="cronTrigger"/>
                <ref bean="cronTrigger2"/>
            </list>
        </property>
    </bean>


    <!--dubbo配置应用名称-->
    <dubbo:application name="health_jobs"/>
    <!--连接zookeeper-->
    <dubbo:registry address="zookeeper://127.0.0.1" port="2181"/>
    <!--开启注解扫描，也会开spring的组件扫描-->
    <dubbo:annotation package="com.itheima.health.jobs"/>
    <!--超时全局设置10分钟，开发阶段不检测(智能容错)-->
    <dubbo:consumer timeout="600000" check="false"/>
</beans>